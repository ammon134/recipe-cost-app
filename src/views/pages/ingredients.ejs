<main class="sm:px-4 py-8 bg-gray-50">
  <h1 class="text-center mb-10">All Ingredients</h1>
  <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
    <section class="col-span-1 md:col-span-2 px-4">
      <% if (ingredients.length === 0) { %>
      <h2 class="mb-5">No ingredients!</h2>
      <p>Add more using the form on the right.</p>
      <% } else { %>
      <div class="overflow-x-auto relative shadow-md sm:rounded-lg">
        <table id="ingredient_list" class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
          <thead class="text-xs text-white uppercase bg-blue-700 dark:bg-gray-700 dark:text-gray-400">
            <tr>
              <th scope="col" class="py-3 px-6">
                Ingredient
              </th>
              <th scope="col" class="py-3 px-6">
                Unit
              </th>
              <th scope="col" class="py-3 px-6">
                Unit Cost
              </th>
              <th scope="col" class="py-3 px-6">
                Action
              </th>
            </tr>
          </thead>
          <tbody>

            <% ingredients.forEach((ingredient) => { %>
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
              <td class="ingredient-name py-4 px-6 text-gray-900 dark:text-white">
                <div class="flex items-center space-x-3"><%= ingredient.name %></div>
              </td>
              <td class="py-4 px-6 text-gray-900 dark:text-white capitalize">
                <div class="flex items-center space-x-3"><%= ingredient.unit %></div>
              </td>
              <td class="py-4 px-6 text-gray-900 dark:text-white">
                <div class="flex items-center space-x-3"><%= ingredient.unitCost %></div>
              </td>
              <td class="py-4 px-6 flex justify-start gap-4">
                <a href="/ingredients/<%= ingredient._id %>" class="font-medium cursor-pointer text-blue-600 dark:text-blue-500">Edit</a>
                <input type="submit" value="Delete" data-id="<%= ingredient._id %>" class="remove-button cursor-pointer font-medium text-red-600 dark:text-red-500"></input>
              </td>
            </tr>
            <% }) %>

          </tbody>
        </table>
      </div>
      <% } %>
    </section>
    <section class="col-span-1 md:col-span-1 px-4">
      <div class="shadow-md sm:rounded-lg bg-white p-4">
        <h2 class="mb-4">Add Ingredients</h2>
        <form id="add_ingredient" action="/ingredients" method="POST">
          <div class="">
            <div class="mb-4">
              <label for="ingredient" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Ingredient</label>
              <input type="text" id="ingredient_name" autofocus autocomplete="off" name="name" placeholder="e.g. Egg" required class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
            </div>
            <div class="mb-4">
              <label for="unit" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Unit</label>
              <select id="unit" name="unit" required class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                <option value="default" selected>Choose a Unit</option>
                <% SUPPORTED_UNITS.forEach(unit => { %>
                <option value="<%= unit.symbol %>"><%= unit.name %></option>
                <% }) %>
              </select>
            </div>
            <div class="mb-4">
              <label for="unitCost" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Cost per Unit
                (1,000 VND)</label>
              <input type="number" id="unitCost" name="unitCost" placeholder="5" required class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
            </div>
          </div>
          <button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">Save</button>
        </form>
      </div>
    </section>
  </div>
</main>
<script>
  // Send delete ingredient request
  const deleteIngredient = async (button) => {
    if (confirm('Are you sure you want to delete this ingredient?')) {

      const res = await fetch(`/api/ingredients/${button.dataset.id}`, {
        method: 'DELETE'
      }).then(res => {
        if (!res.ok) {
          alert('Something went wrong, please try again later.')
          console.log(res)
        }
        const row = button.closest('tr');
        row.remove();
      }).catch((err) => {
        console.error(err)
      })
    }
  }

  const removeButtons = document.querySelectorAll('.remove-button');
  removeButtons.forEach(button => {
    button.addEventListener('click', async () => {
      const res = await deleteIngredient(button);
    })
  })
</script>
<script>
  // Update table content
  const updateTable = (ingredients) => {
    console.log('ingredients', ingredients)
    const tbody = window.document.querySelector('#ingredient_list tbody');
    tbody.innerHTML = '';

    ingredients.forEach(ingredient => {
      const row = document.createElement('tr');
      row.setAttribute('class', 'bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600')

      for (let prop in ingredient) {
        if (prop == '_id') {
          continue
        }

        // Create Name Cell
        const cell = document.createElement('td');
        cell.setAttribute('class', 'ingredient-name py-4 px-6 text-gray-900 dark:text-white')

        const cellInner = document.createElement('div');
        cellInner.setAttribute('class', 'flex items-center space-x-3')
        if (prop == 'unit') {
          cellInner.classList.add('capitalize')
        }

        cellInner.innerHTML = String(ingredient[prop]);

        cell.appendChild(cellInner)

        row.appendChild(cell)

        tbody.appendChild(row)
      }

      const actionCell = document.createElement('td');
      actionCell.setAttribute('class', 'py-4 px-6 flex justify-start gap-4');

      const editLink = document.createElement('a');
      editLink.setAttribute('href', `${ingredient._id}`);
      editLink.setAttribute('class', 'font-medium cursor-pointer text-blue-600 dark:text-blue-500');
      editLink.innerHTML = 'Edit';
      actionCell.appendChild(editLink);

      const deleteButton = document.createElement('input');
      deleteButton.setAttribute('type', 'submit');
      deleteButton.setAttribute('value', 'Delete');
      deleteButton.setAttribute('data-id', `${ingredient._id}`);
      deleteButton.setAttribute('class', 'remove-button cursor-pointer font-medium text-red-600 dark:text-red-500')
      actionCell.appendChild(deleteButton)

      row.appendChild(actionCell)

    });

  }

  const getIngredients = () => {
    return fetch('/api/ingredients/', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      })
      .then(res => res.json())
      .catch((err) => {
        console.error(err)
      })
  }

  // Send AJAX request to add ingredient
  const addIngredient = () => {
    const nameInput = document.querySelector('#ingredient_name');
    const unitInput = document.querySelector('#unit');
    const unitCostInput = document.querySelector('#unitCost');
    const ingredient = {
      name: nameInput.value,
      unit: unitInput.value,
      unitCost: unitCostInput.value,
    };
    fetch('/api/ingredients', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(ingredient),
      })
      .then(response => {
        // console.log(response);
        if (response.ok) {
          getIngredients()
            .then(ingredients => {
              updateTable(ingredients);
            })
            .catch(error => {
              console.error('Error:', error);
            });
        }
      })
      .catch((error) => {
        console.error('Error:', error);
      });
  }

  // Button to trigger the AJAX request
  const submitButton = document.querySelector('#add_ingredient button[type="submit"]');
  submitButton.addEventListener('click', (event) => {
    event.preventDefault();
    addIngredient();
  });
</script>